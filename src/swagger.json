{
    "swagger": "2.0",
    "info": {
        "title": "Student AI Toolkit API",
        "description": "API for the Student AI Toolkit",
        "version": "1.0.0",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
        {
            "name": "users",
            "description": "API for users in the system"
        },
        {
            "name": "notes",
            "description": "API for notes in the system"
        },
        {
            "name": "tasks",
            "description": "API for notes in the system"
        },
        {
            "name": "slides",
            "description": "API for notes in the system"
        },
        {
            "name": "presentations",
            "description": "API for notes in the system"
        },
        {
            "name": "chat",
            "description": "API for chat interaction"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/chat": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "Send a message to the OpenAI chat service",
                "description": "Send a message to the OpenAI chat service and get a response",
                "parameters": [
                    {
                        "name": "message",
                        "in": "body",
                        "description": "The message to send to the chat service",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "Role of the message sender"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content of the message"
                                }
                            },
                            "required": [
                                "role",
                                "content"
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/summarizeText": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "Summarize text using OpenAI service",
                "description": "This endpoint summarizes text using the OpenAI service.",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Title of the summarized text"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Summarized text"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Description of the error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Description of the error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mix": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "Send notes and a summary to the OpenAI chat service and get a response",
                "description": "Send notes and a summary to the OpenAI chat service and get a response",
                "parameters": [
                    {
                        "name": "notes",
                        "in": "body",
                        "description": "The notes to be mixed",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "object",
                                    "properties": {
                                        "title": {
                                            "type": "string"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "convertedLecture": {
                                    "type": "object",
                                    "properties": {
                                        "title": {
                                            "type": "string"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "string",
                            "description": "Mixed notes with summary"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/image/upload": {
            "post": {
                "tags": [
                    "images"
                ],
                "summary": "Upload an image",
                "description": "Upload an image",
                "operationId": "uploadImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "The image to upload",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image uploaded"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/image/{userId}": {
            "get": {
                "tags": [
                    "images"
                ],
                "summary": "Get user image",
                "description": "Get user image",
                "operationId": "getUserImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User image found"
                    },
                    "404": {
                        "description": "User image not found"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "registerUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "loginUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User credentials",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "user@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "password123"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/validate": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Validate user token",
                "description": "Validate user token",
                "operationId": "validateToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User token",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "JWT token here"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token is valid"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/readPdf": {
            "post": {
                "tags": [
                    "file"
                ],
                "summary": "Read a PDF file",
                "description": "Read a PDF file uploaded as form data",
                "operationId": "readPdf",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "title",
                        "description": "Title of the PDF file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "pdf",
                        "description": "PDF file to be uploaded",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file read successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "file": {
                                    "type": "object",
                                    "properties": {
                                        "title": {
                                            "type": "string"
                                        },
                                        "text": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Get all files",
                "description": "Get a list of all files",
                "operationId": "getAllFiles",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/File"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{id}": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Get file by ID",
                "description": "Get a file by its ID",
                "operationId": "getFileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "File found",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "404": {
                        "description": "File not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/file/{id}": {
            "delete": {
                "tags": [
                    "files"
                ],
                "summary": "Delete file by ID",
                "description": "Delete a file by its ID",
                "operationId": "deleteFileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted successfully"
                    },
                    "404": {
                        "description": "File not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "description": "Get all users",
                "operationId": "getUsers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user",
                "description": "Update an existing user",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete an existing user",
                "description": "Delete an existing user",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/notes": {
            "post": {
                "tags": [
                    "notes"
                ],
                "summary": "Create a new note",
                "description": "Create a new note",
                "operationId": "createNote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Note object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note created"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "Get all notes",
                "description": "Get all notes",
                "operationId": "getAllNotes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Note"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/notes/{noteId}": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "Get a note by ID",
                "description": "Get a note by its ID",
                "operationId": "getNoteById",
                "parameters": [
                    {
                        "name": "noteId",
                        "in": "path",
                        "description": "ID of the note to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note found",
                        "schema": {
                            "$ref": "#/definitions/Note"
                        }
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "notes"
                ],
                "summary": "Update an existing note",
                "description": "Update an existing note",
                "operationId": "updateNoteById",
                "parameters": [
                    {
                        "name": "noteId",
                        "in": "path",
                        "description": "ID of the note to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Note object with updated data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note updated"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "notes"
                ],
                "summary": "Delete an existing note",
                "description": "Delete an existing note",
                "operationId": "deleteNoteById",
                "parameters": [
                    {
                        "name": "noteId",
                        "in": "path",
                        "description": "ID of the note to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note deleted"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "description": "Create a new task",
                "operationId": "createTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Task object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task created"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "description": "Get all tasks",
                "operationId": "getAllTasks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Task"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/tasks/{taskId}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID",
                "description": "Get a task by its ID",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task found",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Update an existing task",
                "description": "Update an existing task",
                "operationId": "updateTaskById",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Task object with updated data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tasks"
                ],
                "summary": "Delete an existing task",
                "description": "Delete an existing task",
                "operationId": "deleteTaskById",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of the task to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/slides": {
            "post": {
                "tags": [
                    "slides"
                ],
                "summary": "Create a new slide",
                "description": "Create a new slide",
                "operationId": "createSlide",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Slide object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slide created"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "slides"
                ],
                "summary": "Get all slides",
                "description": "Get all slides",
                "operationId": "getAllSlides",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of slides",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Slide"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/slides/{slideId}": {
            "get": {
                "tags": [
                    "slides"
                ],
                "summary": "Get a slide by ID",
                "description": "Get a slide by its ID",
                "operationId": "getSlideById",
                "parameters": [
                    {
                        "name": "slideId",
                        "in": "path",
                        "description": "ID of the slide to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slide found",
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "slides"
                ],
                "summary": "Update an existing slide",
                "description": "Update an existing slide",
                "operationId": "updateSlideById",
                "parameters": [
                    {
                        "name": "slideId",
                        "in": "path",
                        "description": "ID of the slide to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Slide object with updated data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slide updated"
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slides"
                ],
                "summary": "Delete an existing slide",
                "description": "Delete an existing slide",
                "operationId": "deleteSlideById",
                "parameters": [
                    {
                        "name": "slideId",
                        "in": "path",
                        "description": "ID of the slide to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slide deleted"
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                }
            }
        },
        "/presentations": {
            "post": {
                "tags": [
                    "presentations"
                ],
                "summary": "Create a new presentation",
                "description": "Create a new presentation",
                "operationId": "createPresentation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Presentation object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Presentation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation created"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "presentations"
                ],
                "summary": "Get all presentations",
                "description": "Get all presentations",
                "operationId": "getAllPresentations",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of presentations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Presentation"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/presentations/{presentationId}": {
            "get": {
                "tags": [
                    "presentations"
                ],
                "summary": "Get a presentation by ID",
                "description": "Get a presentation by its ID",
                "operationId": "getPresentationById",
                "parameters": [
                    {
                        "name": "presentationId",
                        "in": "path",
                        "description": "ID of the presentation to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation found",
                        "schema": {
                            "$ref": "#/definitions/Presentation"
                        }
                    },
                    "404": {
                        "description": "Presentation not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "presentations"
                ],
                "summary": "Update an existing presentation",
                "description": "Update an existing presentation",
                "operationId": "updatePresentationById",
                "parameters": [
                    {
                        "name": "presentationId",
                        "in": "path",
                        "description": "ID of the presentation to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Presentation object with updated data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Presentation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation updated"
                    },
                    "404": {
                        "description": "Presentation not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "presentations"
                ],
                "summary": "Delete an existing presentation",
                "description": "Delete an existing presentation",
                "operationId": "deletePresentationById",
                "parameters": [
                    {
                        "name": "presentationId",
                        "in": "path",
                        "description": "ID of the presentation to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation deleted"
                    },
                    "404": {
                        "description": "Presentation not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                },
                "imageUrl": {
                    "type": "string"
                },
                "hasPayed": {
                    "type": "boolean",
                    "default": false
                },
                "taskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "presentationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "current timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "default": "current timestamp"
                }
            }
        },
        "Note": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "prompt": {
                    "type": "string"
                },
                "answer": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Slide": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "number": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "Files": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Presentation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "prompt": {
                    "type": "string"
                },
                "slides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}