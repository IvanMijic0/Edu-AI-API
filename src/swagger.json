{
    "swagger": "2.0",
    "info": {
      "title": "Student AI Toolkit API",
      "description": "API for the Student AI Toolkit",
      "version": "1.0.0",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
      {
        "name": "users",
        "description": "API for users in the system"
        }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Create a new user",
          "description": "Create a new user",
          "operationId": "createUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be added to the system",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User created"
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get all users",
          "description": "Get all users",
          "operationId": "getUsers",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "List of users",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "put": {
          "tags": [
            "users"
          ],
          "summary": "Update an existing user",
          "description": "Update an existing user",
          "operationId": "updateUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated"
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete an existing user",
          "description": "Delete an existing user",
          "operationId": "deleteUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to delete",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted"
            },
            "405": {
              "description": "Invalid input"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"  
          },
          "imageUrl": {
            "type": "string"
          },
          "hasPayed": {
            "type": "boolean",
            "default": false
          },
          "taskIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "presentationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time", 
            "default": "current timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",  
            "default": "current timestamp"
          }
        }
      }
    }
  }
  
  